pipeline {
    agent any
    
    stages {
        stage('Stash Files') {
            steps {
                // Debugging output to list files in the workspace
                sh 'ls -lR'
                // Stash files in the Jenkins workspace
                stash(name: 'myfiles', includes: '**/*', excludes: 'Jenkinsfile3')
            }
        }
        
    stage('Archive') {
            steps {
                script {
                    sh 'zip -r code.zip * -x Jenkinsfile3'
                    archiveArtifacts 'code.zip'
                }
            }
        }

        stage('Push to Nexus') {
            steps {
                script {
                    def nexusUrl = "http://18.208.145.154:8081//repository/code/"
                    def repositoryId = "code"
                    def artifactPath = "code.zip"
                    
                    withCredentials([usernamePassword(credentialsId: 'nexus-user-credentials', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
                        def nexusUploadCommand = "curl -v -u \"$NEXUS_USERNAME:$NEXUS_PASSWORD\" -X POST \"$nexusUrl/service/rest/v1/components?repository=${repositoryId}\" -F \"raw.directory=\$(dirname '${artifactPath}')\" -F \"raw.asset1=@${artifactPath}\""
                        sh nexusUploadCommand
                    }
                }
            }
        }

        stage('Push to JFrog Artifactory') {
            steps {
                script {
                    // Upload the zip file to JFrog Artifactory
                    sh 'curl -uadmin:AP8gqnnJFGjpmxzN9a1p4zdFjHe -T code.zip "http://44.212.72.5:8081/artifactory/code/code.zip"'
                }
            }
        }

        stage('Download Artifact from Jfrog') {
            agent {
                label 'ansible1'
            }
            steps {
                script {
                    // Download the zip file from JFrog Artifactory
                    sh 'curl -uadmin:AP8gqnnJFGjpmxzN9a1p4zdFjHe -O "http://44.212.72.5:8081/artifactory/code/code.zip"'
                    // Now you can use the downloaded files on the agent
                }
            }
        }

        stage('Run playbook') {
            agent {
                label 'ansible1'
            }
            steps {
                script {
                    // Unzip ansible-code.zip
                    sh 'unzip -o code.zip'
                    // Run ansible-playbook from the correct directory
                    dir('ansible-code') {
                        sh 'ansible-playbook -i /home/ec2-user/ansible-dev/week17-ansible-code/inventory.yml /home/ec2-user/ansible-dev/week17-ansible-code/play1.yml'
                        
                    }
                }
            }
        }
        
    }
}

    
